# Generated by Django 5.1.2 on 2025-09-16 22:29

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import storages.backends.ftp
import topcvetok.utils
import topcvetok.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeType',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Название типа атрибута')),
                ('slug', models.TextField(blank=True, null=True, verbose_name='URL-адрес')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_filterable', models.BooleanField(default=True, verbose_name='Доступен для фильтрации')),
                ('filter_type', models.CharField(choices=[('checkbox', 'Чекбокс'), ('radio', 'Радио кнопка'), ('select', 'Выпадающий список'), ('range', 'Диапазон значений'), ('color', 'Цветовая палитра')], default='checkbox', max_length=20, verbose_name='Тип фильтра')),
            ],
            options={
                'verbose_name': 'Тип атрибута',
                'verbose_name_plural': 'Типы атрибутов',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, help_text='id баннера', max_length=40, primary_key=True, serialize=False, verbose_name='id баннера')),
                ('title', models.TextField(verbose_name='Заголовок')),
                ('link', models.TextField(blank=True, null=True, verbose_name='Адрес')),
                ('text', models.TextField(verbose_name='Описание')),
                ('photo', models.ImageField(blank=True, help_text='Фото', null=True, storage=storages.backends.ftp.FTPStorage(location='ftps://vladanak:vladanak@5.35.90.116:21/'), upload_to='media/banners/', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Баннер',
                'verbose_name_plural': 'Баннеры',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID контакта')),
                ('name', models.CharField(help_text='Название', max_length=40, verbose_name='Название')),
                ('address', models.TextField(help_text='Адрес', verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, max_length=13, null=True, validators=[topcvetok.validators.validate_phone], verbose_name='Телефон')),
                ('timeStart', models.TimeField(help_text='Время начала работы', verbose_name='Время начала работы')),
                ('timeEnd', models.TimeField(help_text='Время конца работы', verbose_name='Время конца работы')),
                ('email', topcvetok.utils.LowercaseEmailField(error_messages={'unique': 'Значение почты должно быть уникальным.'}, max_length=254, verbose_name='Почта')),
                ('instLink', models.CharField(blank=True, help_text='Ссылка на inst', max_length=128, null=True, verbose_name='Ссылка на inst')),
                ('vkLink', models.CharField(blank=True, help_text='Ссылка на vk', max_length=128, null=True, verbose_name='Ссылка на vk')),
                ('tgLink', models.CharField(blank=True, help_text='Ссылка на tg', max_length=128, null=True, verbose_name='Ссылка на tg')),
                ('fbLink', models.CharField(blank=True, help_text='Ссылка на fb', max_length=128, null=True, verbose_name='Ссылка на fb')),
            ],
            options={
                'verbose_name': 'Контакты',
                'verbose_name_plural': 'Контакт',
            },
        ),
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, help_text='id способа доставки', max_length=40, primary_key=True, serialize=False, verbose_name='id способа доставки')),
                ('name', models.CharField(max_length=100, verbose_name='Название способа доставки')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('delivery_type', models.CharField(choices=[('minsk', 'Доставка по Минску'), ('belarus', 'Доставка по Беларуси'), ('pickup', 'Самовывоз')], default='minsk', max_length=20, verbose_name='Тип доставки')),
                ('base_price', models.DecimalField(decimal_places=2, default=0, help_text='Для самовывоза или фиксированная стоимость', max_digits=10, verbose_name='Базовая стоимость')),
                ('free_delivery_min_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Сумма заказа для бесплатной доставки (например, 250)', max_digits=10, null=True, verbose_name='Минимальная сумма для бесплатной доставки')),
                ('working_hours_start', models.TimeField(default='08:00', help_text='Время начала бесплатной доставки', verbose_name='Начало рабочего времени')),
                ('working_hours_end', models.TimeField(default='22:00', help_text='Время окончания бесплатной доставки', verbose_name='Конец рабочего времени')),
                ('low_amount_delivery_price', models.DecimalField(decimal_places=2, default=12, help_text='Доставка при заказе ниже минимальной суммы в рабочее время', max_digits=10, verbose_name='Стоимость доставки для малых заказов')),
                ('low_amount_early_price', models.DecimalField(decimal_places=2, default=24, max_digits=10, verbose_name='Ранняя доставка для малых заказов')),
                ('low_amount_late_price', models.DecimalField(decimal_places=2, default=24, max_digits=10, verbose_name='Поздняя доставка для малых заказов')),
                ('late_delivery_min_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Минимальная сумма заказа для поздней доставки (например, 170)', max_digits=10, null=True, verbose_name='Минимальная сумма для поздней доставки')),
                ('pickup_address', models.TextField(blank=True, null=True, verbose_name='Адрес самовывоза')),
                ('pickup_hours', models.TextField(blank=True, null=True, verbose_name='Часы работы самовывоза')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Способ доставки',
                'verbose_name_plural': 'Способы доставки',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, help_text='id способа оплаты', max_length=40, primary_key=True, serialize=False, verbose_name='id способа оплаты')),
                ('name', models.CharField(max_length=100, verbose_name='Название способа оплаты')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Способ оплаты',
                'verbose_name_plural': 'Способы оплаты',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название услуги')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена BYN')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступна')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, help_text='id видео', max_length=40, primary_key=True, serialize=False, verbose_name='id видео')),
                ('slug', models.TextField(blank=True, null=True, verbose_name='Адрес')),
                ('video', models.FileField(blank=True, help_text='Видео', null=True, storage=storages.backends.ftp.FTPStorage(location='ftps://vladanak:vladanak@5.35.90.116:21/'), upload_to='media/videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mov', 'avi', 'mkv'])], verbose_name='Видео')),
                ('frameBackground', models.TextField(blank=True, null=True, verbose_name='Для фронта бэкграунд')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видосы',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False, verbose_name='GUID аккаунта')),
                ('first_name', models.CharField(help_text='Имя', max_length=50, validators=[topcvetok.validators.validate_name], verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Фамилия', max_length=50, validators=[topcvetok.validators.validate_name], verbose_name='Фамилия')),
                ('middleName', models.CharField(blank=True, help_text='Отчество', max_length=50, null=True, validators=[topcvetok.validators.validate_name], verbose_name='Отчество')),
                ('login', models.CharField(db_index=True, error_messages={'unique': 'Значение логина должно быть уникальным.'}, max_length=30, unique=True, validators=[topcvetok.validators.validate_login], verbose_name='Логин')),
                ('email', topcvetok.utils.LowercaseEmailField(error_messages={'unique': 'Значение почты должно быть уникальным.'}, max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=13, null=True, validators=[topcvetok.validators.validate_phone], verbose_name='Телефон')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
                'ordering': ('login',),
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отображаемое название')),
                ('hex_code', models.CharField(blank=True, max_length=7, null=True, verbose_name='HEX код (для цветов)')),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, help_text='Дополнительная стоимость (положительная) или скидка (отрицательная)', max_digits=10, verbose_name='Модификатор цены')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attribute_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='topcvetok.attributetype', verbose_name='Тип атрибута')),
            ],
            options={
                'verbose_name': 'Значение атрибута',
                'verbose_name_plural': 'Значения атрибутов',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, help_text='id категории', max_length=40, primary_key=True, serialize=False, verbose_name='id категории')),
                ('name', models.TextField(verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('slug', models.TextField(blank=True, null=True, verbose_name='Ссылка')),
                ('keyword', models.TextField(blank=True, null=True, verbose_name='Ключевые слова')),
                ('icon', models.ImageField(blank=True, help_text='Иконка', null=True, storage=storages.backends.ftp.FTPStorage(location='ftps://vladanak:vladanak@5.35.90.116:21/'), upload_to='media/categories/icons', verbose_name='Иконка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Порядок отображения')),
                ('parent', models.ForeignKey(blank=True, help_text='Выберите родительскую категорию для создания подкатегории', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='topcvetok.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'unique_together': {('parent', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False)),
                ('delivery_address', models.TextField(blank=True, null=True, verbose_name='Адрес доставки')),
                ('delivery_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата доставки')),
                ('delivery_notes', models.TextField(blank=True, null=True, verbose_name='Примечания к доставке')),
                ('customer_name', models.CharField(max_length=255, verbose_name='Имя клиента')),
                ('customer_phone', models.CharField(blank=True, max_length=13, null=True, validators=[topcvetok.validators.validate_phone], verbose_name='Телефон клиента')),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email клиента')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания к заказу')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('personal_data_consent', models.BooleanField(default=False, verbose_name='Согласие на обработку персональных данных')),
                ('consent_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата согласия')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Общая сумма')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('delivery_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='topcvetok.deliverymethod', verbose_name='Способ доставки')),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='topcvetok.paymentmethod', verbose_name='Способ оплаты')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='topcvetok.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('slug', models.TextField(blank=True, null=True, verbose_name='URL-адрес')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена BYN')),
                ('promotional_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена BYN акционная')),
                ('photo', models.ImageField(blank=True, help_text='Фото', null=True, storage=storages.backends.ftp.FTPStorage(location='ftps://vladanak:vladanak@5.35.90.116:21/'), upload_to='media/flowers/', verbose_name='Фото')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступен')),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='products', to='topcvetok.category', verbose_name='Категории')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, help_text='id отзыва', max_length=40, primary_key=True, serialize=False, verbose_name='id отзыва')),
                ('company', models.CharField(help_text='компания', max_length=255, verbose_name='компания')),
                ('text', models.TextField(help_text='заголовок', verbose_name='заголовок')),
                ('stars', models.PositiveSmallIntegerField(choices=[(1, '1 звезда'), (2, '2 звезды'), (3, '3 звезды'), (4, '4 звезды'), (5, '5 звезд')], help_text='оценка', verbose_name='оценка')),
                ('answer', models.TextField(blank=True, help_text='описание отзыва', null=True, verbose_name='описание отзыва')),
                ('date', models.DateTimeField(help_text='дата отзыва', verbose_name='дата отзыва')),
                ('icon_url', models.URLField(blank=True, help_text='адрес иконки', null=True, verbose_name='адрес иконки')),
            ],
            options={
                'verbose_name': 'Отзывы',
                'verbose_name_plural': 'Отзыв',
                'unique_together': {('company', 'date', 'text')},
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, help_text='id заказа', max_length=40, primary_key=True, serialize=False, verbose_name='id заказа')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('item_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название товара')),
                ('item_description', models.TextField(blank=True, null=True, verbose_name='Описание товара')),
                ('attributes', models.ManyToManyField(blank=True, to='topcvetok.attribute', verbose_name='Атрибуты')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='topcvetok.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='topcvetok.product', verbose_name='Продукт')),
                ('service', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='topcvetok.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказа',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.CharField(default=topcvetok.utils.generate_uuid, editable=False, max_length=40, primary_key=True, serialize=False)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='topcvetok.attribute', verbose_name='Значение атрибута')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes', to='topcvetok.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Атрибут товара',
                'verbose_name_plural': 'Атрибуты товаров',
                'unique_together': {('product', 'attribute')},
            },
        ),
    ]
